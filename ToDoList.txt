GOMOKU

si vince se si riesce a mettere 5 pedine
dello stesso colore in fila (vert, oriz, obliq)



TO DO LIST:

- Display board: (array [15][15], inizialmente vuoto)    [sarebbe da fare una classe a parte per tenere le cose più in ordine]
	  1 2 3 ... 15 (uso i + visto che le pedine 
	1 + + + ... +   vanno messe nelle intersezioni)
	2 + + + ... +
	3 + + + ... +	[A][B] A=righe, B=colonne
	...
	15 + + + .. +
	(in teoria vanno le lettere orizzontalmente ad indicare le colonne)
	
- Player1/2 devono inserire le coordinate del posto in cui
   inseriranno la pedina:
	-verificare che le coordinate siano valide
	 (all'interno della board, spazio non occupato, ...)
	-controllare eventuali vittorie*
	
- Display pedine sulla board:
	-nero e bianco, scegliere i simboli (es O,X)

*CONTROLLARE EVENTUALI VITTORIE: (parte più complessa)
	-5 in verticale: B resta fisso e vedo se ci sono (basta fare la trasposta e usare i metodi per le righe)
					 5 pedine dello stesso colore di fila 
					 al variare di A
	-5 in orizzontale: come sopra ma A resta fisso e vario B
	-5 in diagonale: A e B variano di +1 entrambe:
		cerco il primo elemento B/W in tutte le righe. Quando trovo il primo
		(vuol dire che nelle righe prima non c'era), controllo a dx (5inRow), sotto (5inColumn)
		e poi controllo sotto a dx (board[i+1][i+1])

CONTROLLO PER PIù DI CINQUE DI FILA:
se ho esattamente 5 vinco, se sono di più no





*************
 REFACTORING
*************

- dividere meglio i compiti tra le classi (e crearne di nuove?)
- metodi troppo lunghi (specialmente i controlli delle diagonali)
- indagare sulle trasposte per vedere quali metodi si possono togliere
- nomi brutti lol
- raccogliere i test
- test che controllano automaticamente il vincitore/la situazione finale
- usare costrutti di java più avanzati? (iterators ecc.?)
- ???